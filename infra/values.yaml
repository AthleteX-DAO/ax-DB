image:
  repository: questdb/questdb
  pullPolicy: IfNotPresent
  tag: 6.4.3

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podSecurityContext: {}
securityContext: {}

questdb:
  config:
    enabled: true
    options:
       shared.worker.count: 2

service:
  annotations: {}
  type: ClusterIP
  port: 9000
  expose:
    postgresql:
      enabled: true
      port: 8812
    influxdb:
      enabled: true
      port: 9009

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 50Gi
  # Uncomment existingClaim to enable existing pvc to be mounted for db storage
  # size and accessMode will be ignored
  # existiung pvc needs to be in the namespace where questdb will be deployed
  # if you have problems with aws availability zones use nodeSelector to schedule nodes in the same az as volume
  # existingClaim: PVC_NAME_HERE

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet
    alb.ingress.kubernetes.io/target-type: ip
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:510626941593:certificate/3450ba78-9970-4d52-b340-c371aefd189b
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=600
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-path: /mlb/players
    alb.ingress.kubernetes.io/group.name: athletex-internet
  hosts:
    - host: test.athletex.io
      paths:
        - '/'

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi
nodeSelector: {}
tolerations: []
affinity: {}
